stages:
  - checkout
  - terraform
  - ansible

variables:
  TF_VAR_OVH_APPLICATION_KEY: "$OVH_APPLICATION_KEY"
  TF_VAR_OVH_APPLICATION_SECRET: "$OVH_APPLICATION_SECRET"
  TF_VAR_OVH_CONSUMER_KEY: "$OVH_CONSUMER_KEY"
  SSH_PRIVATE_KEY: "$SSH_PRIVATE_KEY"
  INSTANCE_IP: "" #OVH IP address

checkout:
  stage: checkout
  script:
    - git clone $CI_REPOSITORY_URL .

terraform:
  stage: terraform
  script:
    - terraform init
    - terraform apply -auto-approve -var-file="OVH.tf"
    - export INSTANCE_IP=$(cd infra && terraform output -raw instance_ip)
    - echo "INSTANCE_IP=$INSTANCE_IP" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

ansible:
  stage: ansible
  script:
    - source variables.env
    - echo "[servers]\n$INSTANCE_IP ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" > inventory
    - cd ansible && ansible-playbook -i ../inventory.ini master_playbook.yml
